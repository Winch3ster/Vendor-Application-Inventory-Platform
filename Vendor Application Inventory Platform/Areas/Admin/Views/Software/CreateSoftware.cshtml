@model Vendor_Application_Inventory_Platform.Models.Software
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["title"] = "Register Software";
    Layout = "~/Areas/Admin/Views/Shared/_AdminControlPanel.cshtml";
}

<div class="col-9 m-md-5">
    <p>Register new software</p>
    <hr />
    <h3>Software Information</h3>


    <form class="mt-4">
        <!-- Company -->
        <div class="d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Company</label>
            <select class="form-select" name="company">
                <option selected>Select Company</option>
                <option value="1">One</option>
                <option value="2">Two</option>
                <option value="3">Three</option>
            </select>
        </div>
        
        <div class="col-12">
            <div class="col-9 mb-3 mt-1 citisoft-text-color float-end">Company Don't Exist? <a asp-controller="Company" asp-action="CreateCompany">Create</a></div>
        </div>
        
        <!-- Software name -->
        <div class="col-12 mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Software Name</label>
            <input class="form-control-light" />
        </div>


        <!-- Software description -->
        <div class="mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Software Description</label>
            <textarea class="form-control-light"></textarea>
        </div>


        <!-- Buiness area -->
        <div class="mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Business Area</label>
            
            <div class="multi-value-container">
                <div class="multi-value-input-container d-block" id="businessAreaValueContainer">
                    <div class="d-flex align-items-center justify-content-evenly mb-2">
                        <input class="form-control-light full-size" />
                        <span class="btn btn-danger rounded col-2  mx-2 d-flex align-items-center justify-content-center" ><i class="bi bi-trash"></i></span>
                    </div>
                   
                </div>
                <div class="d-flex justify-content-center" id="test">
                    <div class="btn btn-primary rounded col-12" onclick="AddField(this)"><i class="bi bi-plus"></i></div>
                </div>
            </div>      
        </div>
        

        <!-- Modules -->
        <div class="mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Modules</label>

            <div class="multi-value-container">
                <div class="multi-value-input-container d-block" id="modulesValueContainer">
                    <div class="d-flex align-items-center justify-content-evenly mb-2">
                        <input class="form-control-light full-size" />
                        <span class="btn btn-danger rounded col-2  mx-2 d-flex align-items-center justify-content-center"><i class="bi bi-trash"></i></span>
                    </div>

                </div>
                <div class="d-flex justify-content-center" id="test">
                    <div class="btn btn-primary rounded col-12" onclick="AddField(this)"><i class="bi bi-plus"></i></div>
                </div>
            </div>
        </div>



        <!-- Cloud -->
        <div class="mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Cloud</label>

            <div class="col-sm-10">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios1" value="option1">
                    <label class="form-check-label" for="gridRadios1">
                        Enabled
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios2" value="option2">
                    <label class="form-check-label" for="gridRadios2">
                        Native
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="gridRadios" id="gridRadios3" value="option3">
                    <label class="form-check-label" for="gridRadios3">
                        Based
                    </label>
                </div>
            </div>
        </div>
        
    </form>


</div>



@section Scripts{
    <script>

        let companyContactContainer = document.getElementById('company-contact-container');

        let countryDropDown = document.getElementById('country-drop-down');

        function AddField(button) {

            //elem --> get the element that called this function 

            //get its parent's sibling's id. This will be the container that stores all the input fields
            let target = ((button.parentNode).previousElementSibling.id);
            valueContainer = document.getElementById(target);



            //Create a text field component
            let container = document.createElement('div');
            container.classList.add("d-flex", "align-items-center", "justify-content-evenly", "mb-2");


            let inputField = document.createElement('input');
            inputField.classList.add("form-control-light", "full-size");

            let icon = document.createElement('i');
            icon.classList.add("bi", "bi-trash");


            let removeBtn = document.createElement('span');
            removeBtn.classList.add("btn", "btn-danger", "rounded", "col-2", "mx-2", "d-flex", "align-items-center", "justify-content-center");
             

            removeBtn.appendChild(icon)


            container.appendChild(inputField);
            container.appendChild(removeBtn);

            //removeBtn.addEventListener('click', removeThis)

            removeBtn.addEventListener('click', removeThis);
            //add it to the container 
            valueContainer.appendChild(container);

            //a();

        }

        function a(){

        
            let removeBtnList = document.getElementsByClassName('click');

            for (let i = 0; i < removeBtnList.length; i++){
                removeBtnList[i].addEventListener('click', removeThis)
            }


            //console.log(removeBtnList[1]);
        }


        function removeThis(button) {

            //console.log("The removeThis function is running");
            //button.parentElement.remove();
            console.log(button.target.parentNode);
            button.target.parentNode.closest('div').remove();
        
        }






        function AddContactBlock(){

            //Create company contact block
            let block = document.createElement('div');
            block.classList.add("mb-3", "d-flex", "align-top");

            //Create input fields' container
            let inputContainer = document.createElement('div');
            inputContainer.classList.add('d-block')

            //Create label
            let label =document.createElement('label');
            label.classList.add("form-label", "citisoft-text-color", "col-3");
            label.innerHTML = "Company Contact";

            //Create country field
            let countryField =document.createElement('input');
            countryField.classList.add("form-control-light", "full-size", "mb-3");
            countryField.placeholder = "Country Name. Eg. Poland";

            //Create city field
            let cityField =document.createElement('input');
            cityField.classList.add("form-control-light", "full-size", "mb-3");
            cityField.placeholder = "City Name. Eg. Warsaw";

            //Create contact field 
            let contactField = document.createElement('input');
            contactField.classList.add("form-control-light", "full-size", "mb-3");
            contactField.placeholder = "Contacts. Eg. +61 2 8317 6698";

            inputContainer.appendChild(countryField);
            inputContainer.appendChild(cityField);
            inputContainer.appendChild(contactField);

            block.appendChild(label);
            block.appendChild(inputContainer);

            companyContactContainer.appendChild(block);
        }




        function GetCountries(){
            let countryContainer = document.getElementById('countryContainer');

            let countryList = [];

            let country = countryContainer.children;


        }




    </script>
}


