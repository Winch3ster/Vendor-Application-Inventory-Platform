@using Vendor_Application_Inventory_Platform.Data.Enum
@model Vendor_Application_Inventory_Platform.Areas.Admin.ViewModels.UpdateSoftwareViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["title"] = "Register Software";
    Layout = "~/Areas/Admin/Views/Shared/_AdminControlPanel.cshtml";
}

@* Business Area Modal *@
<div class="modal fade" id="businessAreaModal" tabindex="-1" aria-labelledby="businessAreaModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="businessAreaModalLabel">Create Business Area</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="businessAreaForm">
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <input type="text" class="form-control" name="description" required>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <input type="submit" class="btn btn-primary">
                </div>
            </form>
        </div>
    </div>
</div>

@* Software Type Modal *@
<div class="modal fade" id="softwareTypeModal" tabindex="-1" aria-labelledby="softwareTypeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                   <h1 class="modal-title fs-5" id="softwareTypeModalLabel">Create Software Type</h1>
                   <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
               </div>
               <form id="softwareTypeForm">
                   @Html.AntiForgeryToken()
                   <div class="modal-body">
                       <input type="text" class="form-control" name="type" required>
                   </div>
                   <div class="modal-footer">
                       <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                       <input type="submit" class="btn btn-primary">
                   </div>
               </form>
        </div>
    </div>
</div>

@* Software Module Modal *@
<div class="modal fade" id="softwareModuleModal" tabindex="-1" aria-labelledby="softwareModuleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
                    <div class="modal-header">
                           <h1 class="modal-title fs-5" id="softwareModuleModalLabel">Create Software Module</h1>
                           <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                       </div>
                       <form id="softwareModuleForm">
                           @Html.AntiForgeryToken()
                           <div class="modal-body">
                               <input type="text" class="form-control" name="module" required>
                           </div>
                           <div class="modal-footer">
                               <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                               <input type="submit" class="btn btn-primary">
                           </div>
                       </form>
                </div>
    </div>
</div>

@* Financial Service Client Type Modal *@
<div class="modal fade" id="financialServiceModal" tabindex="-1" aria-labelledby="financialServiceModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                   <h1 class="modal-title fs-5" id="financialServiceModalLabel">Create Financial Service Client Type</h1>
                   <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
               </div>
               <form id="financialServiceForm">
                   @Html.AntiForgeryToken()
                   <div class="modal-body">
                       <input type="text" class="form-control" name="description" required>
                   </div>
                   <div class="modal-footer">
                       <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                       <input type="submit" class="btn btn-primary">
                   </div>
               </form>
        </div>
    </div>
</div>

<div class="col-9 m-md-5">
    <p>Register new software</p>
    <hr />
    <h3>Software Information</h3>


    <form id="softwareForm" class="mt-4">
        @Html.AntiForgeryToken()
        <!-- Company -->
        <div class="d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Company</label>
            <select id="companySelect" class="form-select" name="company" required>
                <option selected value="">Select Company</option>
                @if (Model.Companies != null && Model.Companies.Any())
                {
                    @foreach (var company in Model.Companies)
                    {
                        <option value="@company.CompanyID" selected="@(company.CompanyID == Model.companyId ? "selected" : null)">@company.CompanyName</option>
                    }
                }
            </select>

        </div>

        <div class="col-12">
            <div class="col-9 mb-3 mt-1 citisoft-text-color float-end">Company Don't Exist? <a asp-controller="Company" asp-action="CreateCompany">Create</a></div>
        </div>

        <!-- Software name -->
        <div class="col-12 mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Software Name</label>
            <input type="text" id="softwareName" class="form-control-light" value="@Model.software!.SoftwareName" required/>
        </div>


        <!-- Software description -->
        <div class="mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Software Description</label>
            <textarea id="softwareDescription" class="form-control-light" required>@Model.software.Description</textarea>
        </div>


        <!-- Business area -->
        <div class="mb-5 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Business Area</label>

            <div class="multi-value-container">
                <div class="row multi-value-input-container d-block" id="businessAreaValueContainer">
                            @if (Model.BusinessAreas != null && Model.BusinessAreas.Any())
                            {
                                var i = 1;
                                @foreach (var linkedArea in Model.LinkedBusinessAreas)
                                {
                                    if (i == 1)
                                    {
                                        <div class="d-flex">
                                        <div class="col-9">
                                        <select class="form-select mb-2" required>
                                            <option selected value="">Select Business Area</option>
                                            @foreach (var area in Model.BusinessAreas)
                                            {
                                                <option value="@area.BusinessAreaID" selected="@(area.BusinessAreaID == linkedArea.BusinessAreaID ? "selected" : null)">
                                                    @area.Description
                                                </option>
                                            }
                                        </select>
                                        </div>
                                        <div onmouseover="this.style.cursor='pointer'" class="col-3 mb-3 mt-1 citisoft-text-color ps-3 text-nowrap float-end" data-bs-toggle="modal" data-bs-target="#businessAreaModal">Create</div>
                                        </div>    
                                    }
                                    else{
                                        <div class="row">
                                            <div class="col-9">
                                                <select class="form-select mb-2" required="">
                                                    <option value="">Select Business Area</option>
                                                    @foreach (var area in Model.BusinessAreas)
                                                    {
                                                        <option value="@area.BusinessAreaID" selected="@(area.BusinessAreaID == linkedArea.BusinessAreaID ? "selected" : null)">
                                                            @area.Description
                                                        </option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-3">
                                                <button type="button" class="btn btn-danger w-100 bi bi-trash" onclick="removeThis(event)"></button>
                                            </div>
                                        </div>
                                    }

                                    i++;
                                }
                            }
                </div>
                <div class="col-12 d-flex justify-content-center mt-2">
                    <div class="btn btn-primary rounded col-12" onclick="AddField(this, 'area')" style="width:50px"><i class="bi bi-plus"></i></div>
                </div>
            </div>
        </div>


        <!-- Modules -->
        <div class="mb-5 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Modules</label>

            <div class="multi-value-container">
                <div class="multi-value-input-container d-block" id="modulesValueContainer">
                                @if (Model.SoftwareModules != null && Model.SoftwareModules.Any())
                            {
                                var i = 1;
                                @foreach (var linkedModule in Model.LinkedSoftwareModules)
                                {
                                    if (i == 1)
                                    {
                                        <div class="d-flex">
                                        <div class="col-9">
                                        <select class="form-select mb-2" required>
                                            <option selected value="">Select Modules</option>
                                            @foreach (var module in Model.SoftwareModules)
                                            {
                                                <option value="@module.SoftwareModuleID" selected="@(module.SoftwareModuleID == linkedModule.SoftwareModuleID ? "selected" : null)">
                                                    @module.Module
                                                </option>
                                            }
                                        </select>
                                        </div>
                                        <div onmouseover="this.style.cursor='pointer'" class="col-3 mb-3 mt-1 citisoft-text-color ps-3 text-nowrap float-end" data-bs-toggle="modal" data-bs-target="#softwareModuleModal">Create</div>
                                        </div>    
                                    }
                                    else{
                                        <div class="row">
                                            <div class="col-9">
                                                <select class="form-select mb-2" required="">
                                                    <option value="">Select Modules</option>
                                                    @foreach (var module in Model.SoftwareModules)
                                                    {
                                                        <option value="@module.SoftwareModuleID" selected="@(module.SoftwareModuleID == linkedModule.SoftwareModuleID ? "selected" : null)">
                                                            @module.Module
                                                        </option>
                                                    }
                                                </select>
                                            </div>
                                            <div class="col-3">
                                                <button type="button" class="btn btn-danger w-100 bi bi-trash" onclick="removeThis(event)"></button>
                                            </div>
                                        </div>
                                    }

                                    i++;
                                }
                            }
                             

                </div>
                <div class="d-flex justify-content-center">
                    <div class="btn btn-primary rounded col-12" onclick="AddField(this, 'module')" style="width:50px"><i class="bi bi-plus"></i></div>
                </div>
            </div>
        </div>

        <!-- Software Types -->
        <div class="mb-5 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Software Types</label>

            <div class="multi-value-container">
                <div class="multi-value-input-container d-block" id="softwareTypesValueContainer">
                                @if (Model.SoftwareTypes != null && Model.SoftwareTypes.Any())
                            {
                                var i = 1;
                                @foreach (var linkedType in Model.LinkedSoftwareTypes)
                                {
                                    if (i == 1)
                                    {
                                        <div class="d-flex">
                                        <div class="col-9">
                                        <select class="form-select mb-2" required>
                                            <option selected value="">Select Software Types</option>
                                            @foreach (var type in Model.SoftwareTypes)
                                            {
                                                <option value="@type.SoftwareTypeID" selected="@(type.SoftwareTypeID == linkedType.SoftwareTypeID ? "selected" : null)">
                                                    @type.Type
                                                </option>
                                            }
                                        </select>
                                        </div>
                                         <div onmouseover="this.style.cursor='pointer'" class="col-3 mb-3 mt-1 citisoft-text-color ps-3 text-nowrap float-end" data-bs-toggle="modal" data-bs-target="#softwareTypeModal">Create</div>
                                        </div>    
                                    }
                                    else{
                                        <div class="row">
                                            <div class="col-9">
                                                <select class="form-select mb-2" required="">
                                                    <option value="">Select Software Types</option>
                                                   @foreach (var type in Model.SoftwareTypes)
                                                   {
                                                       <option value="@type.SoftwareTypeID" selected="@(type.SoftwareTypeID == linkedType.SoftwareTypeID ? "selected" : null)">
                                                           @type.Type
                                                       </option>
                                                   }
                                                </select>
                                            </div>
                                            <div class="col-3">
                                                <button type="button" class="btn btn-danger w-100 bi bi-trash" onclick="removeThis(event)"></button>
                                            </div>
                                        </div>
                                    }

                                    i++;
                                }
                            }
                            

                </div>
                <div class="d-flex justify-content-center">
                    <div class="btn btn-primary rounded col-12" onclick="AddField(this, 'type')" style="width:50px"><i class="bi bi-plus"></i></div>
                </div>
            </div>
        </div>

        <!-- Financial Service Client Types -->
        <div class="mb-5 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Financial Service Client Type</label>

            <div class="multi-value-container">
                <div class="multi-value-input-container d-block" id="fscTypesValueContainer">
                                @if (Model.FinancialServicesClientTypes != null && Model.FinancialServicesClientTypes.Any())
                                {
                                    var i = 1;
                                    @foreach (var linkedType in Model.LinkedFinancialServicesClientTypes)
                                    {
                                        if (i == 1)
                                        {
                                            <div class="d-flex">
                                            <div class="col-9">
                                            <select class="form-select mb-2" required>
                                                <option selected value="">Select Types</option>
                                                @foreach (var type in Model.FinancialServicesClientTypes)
                                                {
                                                    <option value="@type.FinancialServicesClientTypeID" selected="@(type.FinancialServicesClientTypeID == linkedType.FinancialServicesClientTypeID ? "selected" : null)">
                                                        @type.Description
                                                    </option>
                                                }
                                            </select>
                                            </div>
                                           <div onmouseover="this.style.cursor='pointer'" class="col-3 mb-3 mt-1 citisoft-text-color ps-3 text-nowrap float-end" data-bs-toggle="modal" data-bs-target="#financialServiceModal">Create</div>
                                            </div>    
                                        }
                                        else{
                                            <div class="row">
                                                <div class="col-9">
                                                    <select class="form-select mb-2" required="">
                                                        <option value="">Select Types</option>
                                                       @foreach (var type in Model.FinancialServicesClientTypes)
                                                       {
                                                           <option value="@type.FinancialServicesClientTypeID" selected="@(type.FinancialServicesClientTypeID == linkedType.FinancialServicesClientTypeID ? "selected" : null)">
                                                               @type.Description
                                                           </option>
                                                       }
                                                    </select>
                                                </div>
                                                <div class="col-3">
                                                    <button type="button" class="btn btn-danger w-100 bi bi-trash" onclick="removeThis(event)"></button>
                                                </div>
                                            </div>
                                        }
                                
                                        i++;
                                    }
                                }

                </div>
                <div class="d-flex justify-content-center">
                    <div class="btn btn-primary rounded col-12" onclick="AddField(this, 'financial')" style="width:50px"><i class="bi bi-plus"></i></div>
                </div>
            </div>
        </div>





        <!-- Cloud -->
        <div class="mb-3 d-flex align-top">
            <label class="form-label citisoft-text-color col-3">Cloud</label>

            <div class="col-sm-10">
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="cloudRadios" id="cloudRadios1" value="Enabled" checked="@(Model.software.Cloud == CloudType.Enabled ? "checked" : null)" required>
                    <label class="form-check-label" for="cloudRadios1">
                        Enabled
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="cloudRadios" id="cloudRadios2" value="Native" checked="@(Model.software.Cloud == CloudType.Native ? "checked" : null)" required>
                    <label class="form-check-label" for="cloudRadios2">
                        Native
                    </label>
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="radio" name="cloudRadios" id="cloudRadios3" value="Based" checked="@(Model.software.Cloud == CloudType.Based ? "checked" : null)" required>
                    <label class="form-check-label" for="cloudRadios3">
                        Based
                    </label>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-end">
            <button type="submit" id="SubmitSoftwareBtn" class="btn btn-primary">Submit</button>
        </div>



    </form>


</div>



@section Scripts{
    <script>
        
        let companyContactContainer = document.getElementById('company-contact-container');

        let countryDropDown = document.getElementById('country-drop-down');
        

        function AddField(button, element, option) {
            
            let selectOption;
            if (option){
                 selectOption = JSON.parse(option);
            }

            let target = ((button.parentNode).previousElementSibling.id);
            let valueContainer = document.getElementById(target);
            
            let container = document.createElement('div');
            container.classList.add('row');
            
            // Create a column for the select (col-9)
            let selectColumn = document.createElement('div');
            selectColumn.classList.add('col-9');
            
            // Create select element
            let select = document.createElement('select');
            select.classList.add("form-select", "mb-2");
            select.required = true;
            
            // Create option element
            
            let BusinessArea = @Html.Raw(Json.Serialize(Model?.BusinessAreas));
            let Financial = @Html.Raw(Json.Serialize(Model?.FinancialServicesClientTypes));
            let SoftwareType = @Html.Raw(Json.Serialize(Model?.SoftwareTypes));
            let Module = @Html.Raw(Json.Serialize(Model?.SoftwareModules));
            
            if (element ==='area'){
                let defaultOption = document.createElement('option');
                defaultOption.innerHTML = 'Select Business Area';
                defaultOption.value = "";
                defaultOption.selected = true;
                select.appendChild(defaultOption);
                
                if(BusinessArea){
                    if (selectOption){
                        selectOption.businessArea.forEach(data=>{
                            let option = document.createElement('option');
                            option.innerHTML = data.description;
                            option.value = data.businessAreaID;
                            select.append(option)
                        })
                    }
                    else{                              
                        BusinessArea.forEach(data=>{
                            let option = document.createElement('option');
                            option.innerHTML = data.description;
                            option.value = data.businessAreaID;
                            select.append(option)
                        })
                    }

                }
            }
            else if(element ==='financial'){
                let defaultOption = document.createElement('option');
                defaultOption.innerHTML = 'Select Types';
                defaultOption.value = "";
                defaultOption.selected = true;
                select.appendChild(defaultOption);
                
                if (Financial){
                    if (selectOption){
                           selectOption.financial.forEach(data=>{
                               let option = document.createElement('option');
                               option.innerHTML = data.description;
                               option.value = data.financialServicesClientTypeID;
                               select.append(option)
                           })
                       }
                       else{                              
                           Financial.forEach(data=>{
                               let option = document.createElement('option');
                               option.innerHTML = data.description;
                               option.value = data.financialServicesClientTypeID;
                               select.append(option)
                           })
                       }
                }
               
            }
            else if (element ==='module'){
                let defaultOption = document.createElement('option');
                 defaultOption.innerHTML = 'Select Modules';
                 defaultOption.value = "";
                 defaultOption.selected = true;
                 select.appendChild(defaultOption);
                            
                if (Module){
                    if (selectOption){
                           selectOption.softwareModule.forEach(data=>{
                               let option = document.createElement('option');
                               option.innerHTML = data.module;
                               option.value = data.softwareModuleID;
                               select.append(option)
                           })
                       }
                       else{                              
                           Module.forEach(data=>{
                               let option = document.createElement('option');
                               option.innerHTML = data.module;
                               option.value = data.softwareModuleID;
                               select.append(option)
                           })
                       }
                }
            }
            else if (element ==='type'){
                let defaultOption = document.createElement('option');
                defaultOption.innerHTML = 'Select Software Type';
                defaultOption.value = "";
                defaultOption.selected = true;
                select.appendChild(defaultOption);
                            
                if (SoftwareType){
                    if (selectOption){
                           selectOption.softwareType.forEach(data=>{
                               let option = document.createElement('option');
                               option.innerHTML = data.type;
                               option.value = data.softwareTypeID;
                               select.append(option)
                           })
                       }
                       else{                              
                           SoftwareType.forEach(data=>{
                               let option = document.createElement('option');
                               option.innerHTML = data.type;
                               option.value = data.softwareTypeID;
                               select.append(option)
                           })
                       }
                }
            }
            
            // Append select to the selectColumn
            selectColumn.appendChild(select);
            
            // Create a column for the button (col-3)
            let buttonColumn = document.createElement('div');
            buttonColumn.classList.add('col-3');
            
            // Create button element
            let removeBtn = document.createElement('button');
            removeBtn.classList.add("btn", "btn-danger", "w-100", "bi", "bi-trash");
            
            // Append button to the buttonColumn
            buttonColumn.appendChild(removeBtn);
            
            // Append selectColumn and buttonColumn to the container
            container.appendChild(selectColumn);
            container.appendChild(buttonColumn);
            
            // Append the container to the valueContainer
            valueContainer.appendChild(container);

            
            removeBtn.addEventListener('click', removeThis);
            // Append the container to the valueContainer

        }


        function removeThis(button) {

            $(button.target).parent().parent().remove();
        
        }
        
        $(document).ready(function () {
            $('#businessAreaForm, #softwareTypeForm, #softwareModuleForm, #financialServiceForm').on('submit',function (e){
                
                e.preventDefault();
                
                let formId = $(this).attr('id');
                let url;
                
                let formData = $(this).serialize();
                
                $(this).children('.modal-body').find('input').val("")
                
                let csrfToken = $(this).children('[name="__RequestVerificationToken"]').val();
                
                    if (formId === 'businessAreaForm') {
                        $('#businessAreaModal').modal('hide');
                        url = "@Url.Action("CreateBusinessArea")";
                    } 
                    else if (formId === 'softwareTypeForm') {
                        $('#softwareTypeModal').modal('hide');
                        url = "@Url.Action("CreateSoftwareType")";
                    } 
                    else if (formId === 'softwareModuleForm') {
                        $('#softwareModuleModal').modal('hide');
                        url = "@Url.Action("CreateSoftwareModule")";
                    } 
                    else if (formId === 'financialServiceForm') {
                        $('#financialServiceModal').modal('hide');
                        url = "@Url.Action("CreateFinancialService")";
                    }
                    
                    $.post({
                        url:url, 
                        data:formData,
                        headers: {
                            "RequestVerificationToken": csrfToken
                        },
                        success:function (data){
                            if (data.success){
                                if (url === "@Url.Action("CreateBusinessArea")"){
                                    let container = $('#businessAreaValueContainer');
                                    let select = container.find('select')
                                    let addBtn = container.siblings().children('.btn');
                                    
                                    let option = ({
                                        businessArea: data.list
                                    })
                                    addBtn.attr('onclick', `AddField(this, 'area', '${JSON.stringify(option)}')`);

                                    select.each(function (){
                                        $(select).empty();
                                        $(select).append('<option selected value="">Select Business Area</option>');
                                        $.each(data.list, function (index, area){
                                            $(select).append('<option value="' + area.businessAreaID + '">' + area.description + '</option>');
                                        })
                                    })
                                }
                                else if(url === "@Url.Action("CreateSoftwareType")"){
                                    let container = $('#softwareTypesValueContainer');
                                    let select = container.find('select')
                                    let addBtn = container.siblings().children('.btn');
                                    
                                    let option = ({
                                        softwareType: data.list
                                    })
                                    addBtn.attr('onclick', `AddField(this, 'type', '${JSON.stringify(option)}')`);
                                    
                                    select.each(function (){
                                        $(select).empty();
                                        $(select).append('<option selected value="">Select Software Types</option>');
                                        $.each(data.list, function (index, area){
                                            $(select).append('<option value="' + area.softwareTypeID + '">' + area.type + '</option>');
                                        })
                                    })
                                }
                                else if(url === "@Url.Action("CreateSoftwareModule")"){
                                    let container = $('#modulesValueContainer');
                                    let select = container.find('select')
                                    let addBtn = container.siblings().children('.btn');
                                    
                                    let option = ({
                                        softwareModule: data.list
                                    })
                                    addBtn.attr('onclick', `AddField(this, 'module', '${JSON.stringify(option)}')`);
                                    
                                    select.each(function (){
                                        $(select).empty();
                                        $(select).append('<option selected value="">Select Modules</option>');
                                        $.each(data.list, function (index, area){
                                            $(select).append('<option value="' + area.softwareModuleID + '">' + area.module + '</option>');
                                        })
                                    })
                                }
                                else if(url === "@Url.Action("CreateFinancialService")"){
                                    let container = $('#fscTypesValueContainer');
                                    let select = container.find('select')
                                    let addBtn = container.siblings().children('.btn');
                                    
                                    let option = ({
                                        financial: data.list
                                    })
                                    addBtn.attr('onclick', `AddField(this, 'financial', '${JSON.stringify(option)}')`);
                                    
                                    select.each(function (){
                                        $(select).empty();
                                        $(select).append('<option selected value="">Select Types</option>');
                                        $.each(data.list, function (index, area){
                                            $(select).append('<option value="' + area.financialServicesClientTypeID + '">' + area.description + '</option>');
                                        })
                                    })
                                }
                                
                            }
                        },
                        error:function (){
                            alert('Something went wrong')
                        }
                    })
            })
            
            $('#softwareForm').on('submit', function (e) {
                        e.preventDefault();
                        
                        let csrfToken = $('#softwareForm > [name="__RequestVerificationToken"]').val();
                        
                        let softwareID = @Model?.software.SoftwareID;
        
                        $('#SubmitSoftwareBtn').prop('disabled', true);
                        
                            const formData = {
                                CompanyID: $('#companySelect').val(),
                                SoftwareName: $('#softwareName').val(),
                                Description: $('#softwareDescription').val(),
                                CloudOption: $('input[name="cloudRadios"]:checked').val(),
                                Modules:[],
                                SoftwareTypes:[],
                                BusinessArea:[],
                                FinancialServiceClientType:[],
                            };
                            
                            $('#modulesValueContainer').find('select').each(function (){
                                formData.Modules.push(parseInt($(this).val()))
                            })


                            $('#softwareTypesValueContainer').find('select').each(function (){
                                formData.SoftwareTypes.push(parseInt($(this).val()))
                            })

                            $('#businessAreaValueContainer').find('select').each(function (){
                                formData.BusinessArea.push(parseInt($(this).val()))
                            })

                            $('#fscTypesValueContainer').find('select').each(function (){
                                formData.FinancialServiceClientType.push(parseInt($(this).val()))
                            })
                            
        
                            $.post({
                                url: "@Url.Action("UpdateSoftware")" + "?id="+softwareID,
                                dataType: "json",
                                contentType: 'application/json',
                                data: JSON.stringify(formData),
                                headers: {
                                    "RequestVerificationToken": csrfToken
                                },
                                success: function (data) {
                                    if (data.success) {
                                        alert(data.message)
                                    }
                                    else{
                                        alert(data.message)
                                    }
                                },
                                error: function (data) {
                                    alert(data.errors);
                                }
                            }).done($('#SubmitSoftwareBtn').prop('disabled', false));
                    });
            });
        </script>
}


